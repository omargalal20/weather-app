properties([pipelineTriggers([githubPush()])])

pipeline {
    agent any

    environment {
        BUILD_VERSION = '0.0.1'
        CI = 'true'
        SERVICE_NAME = 'frontend'
        ECR_REPO = 'weather-app-frontend-repo'
        DEPLOYMENT_FILE = 'docker/docker-compose.frontend.yml'
    }

    when {
        changeset '**/frontend/**' // Centralized condition for the entire pipeline
    }

    stages {
        stage('Pre-Build') {
            when {
                changeset '**/frontend/**'
            }
            steps {
                echo 'Pre-Build...'
            }
        }
        stage('Build') {
            when {
                changeset '**/frontend/**'
            }
            steps {
                echo 'Building...'
                script {
                    withCredentials([string(credentialsId: 'ecr-url', variable: 'ECR_URL')]) {
                        sh """
                            docker build --build-arg BUILD_ENV=development -t ${ECR_REPO}:${BUILD_VERSION} .
                            docker tag ${ECR_REPO}:${BUILD_VERSION} ${ECR_URL}/${ECR_REPO}:${BUILD_VERSION}
                        """
                    }
                }
            }
        }
        stage('Test') {
            when {
                changeset '**/frontend/**'
            }
            steps {
                echo 'Testing...'
            }
        }
        stage('Push Docker Image to ECR') {
            when {
                changeset '**/frontend/**'
            }
            steps {
                echo 'Pushing Docker image to ECR...'
                script {
                    withCredentials([string(credentialsId: 'ecr-url', variable: 'ECR_URL'),
                        string(credentialsId: 'aws-region', variable: 'REGION')]) {
                        sh """
                            aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ECR_URL}
                            docker push ${ECR_URL}/${ECR_REPO}:${BUILD_VERSION}
                        """
                        }
                }
            }
        }
        stage('Deploy App') {
            when {
                changeset '**/frontend/**'
            }
            steps {
                echo 'Deploying App...'
                script {
                    withCredentials([string(credentialsId: 'ecr-url', variable: 'ECR_URL'),
                        string(credentialsId: 'aws-region', variable: 'REGION')]) {
                        script {
                            data = readYaml file: DEPLOYMENT_FILE
                            data.services[SERVICE_NAME].image = "${ECR_URL}/${ECR_REPO}:${BUILD_VERSION}".replaceAll('"', '')
                            writeYaml file: DEPLOYMENT_FILE, data: data, overwrite: true
                        }

                            sh "aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ECR_URL}"
                            sh "docker-compose -f ./${DEPLOYMENT_FILE} up -d"
                        }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully.'
            echo 'Send status Success to Mail, Telegram, Slack...'
        }
        failure {
            echo 'Pipeline execution failed.'
            echo 'Send status Failure to Mail, Telegram, Slack...'
        }
    }
}
